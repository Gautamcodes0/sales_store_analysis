SELECT * FROM SALES_STORE;

--- DATA CLEANING


-- TO CHECK FOR DUPLICATE
SELECT TRANSACTION_ID FROM SALES_STORE
GROUP BY TRANSACTION_ID 
HAVING COUNT(TRANSACTION_ID) > 1;


--- 
WITH CTE AS(
SELECT * ,
   ROW_NUMBER() OVER (PARTITION BY TRANSACTION_ID ORDER BY TRANSACTION_ID) AS ROW_NUM
   FROM SALES_STORE)
   --DELETE FROM CTE
   --WHERE ROW_NUM = 2
SELECT * FROM CTE
WHERE transaction_id IN ( 'TXN240646', 'TXN342128','TXN855235','TXN981773');


--- CORRECTION OF HEADERS

EXEC sp_rename'SALES_STORE.QUANTIY','QUANTITY','COLUMN';



EXEC sp_rename'SALES_STORE.PRCE','PRICE','COLUMN';


SELECT * FROM SALES_STORE;


--- STEP  TO CHECK DATATYPE

SELECT COLUMN_NAME, DATA_TYPE
FROM INFORMATION_SCHEMA .COLUMNS
WHERE TABLE_NAME= 'SALES_STORE';

--- TO CHECK NULL VALUES
DECLARE @table_name SYSNAME = 'SALES_STORE';
DECLARE @sql NVARCHAR(MAX) = '';

SELECT @sql = STRING_AGG(
    'SELECT ''' + c.name + ''' AS ColumnName, COUNT(*) AS NullCount
     FROM ' + @table_name + '
     WHERE [' + c.name + '] IS NULL',
    ' UNION ALL '
)
FROM sys.columns c
WHERE c.object_id = OBJECT_ID(@table_name);

EXEC sp_executesql @sql;



--- TREATING NULL VALUES
SELECT * FROM SALES_STORE
WHERE transaction_id IS NULL
OR 
customer_id IS NULL
OR 
customer_name IS NULL
OR customer_age IS NULL
OR gender IS NULL
OR product_id IS NULL
OR product_name IS NULL 
OR product_category IS NULL 
OR QUANTITY IS NULL
OR PRICE IS NULL
OR payment_mode IS NULL
OR purchase_date IS NULL
OR time_of_purchase IS NULL
OR STATUS IS NULL;

DELETE FROM SALES_STORE
WHERE transaction_id IS NULL;

SELECT * FROM SALES_STORE
WHERE CUSTOMER_NAME = 'EHSAAN RAM';


UPDATE SALES_STORE
SET customer_id = 'CUST9494'
WHERE transaction_id = 'TXN977900';


SELECT * FROM SALES_STORE
WHERE CUSTOMER_NAME = 'DAMINI RAJU';


UPDATE SALES_STORE
SET customer_id = 'CUST1401'
WHERE transaction_id = 'TXN985663'



SELECT * FROM SALES_STORE
WHERE customer_id = 'CUST1003';

UPDATE SALES_STORE
SET customer_name = 'MAHIKA SAINI',
customer_age = 35,
gender = 'MALE'
WHERE transaction_id = 'TXN432798';


SELECT * FROM SALES_STORE;


--- DATA CLEANING


SELECT DISTINCT GENDER FROM SALES_STORE;



UPDATE SALES_STORE
SET gender = 'MALE'
WHERE GENDER = 'M';


UPDATE SALES_STORE
SET gender = 'FEMALE'
WHERE GENDER = 'F';


SELECT DISTINCT PAYMENT_MODE FROM SALES_STORE


UPDATE SALES_STORE
SET payment_mode = 'CREDIT CARD'
WHERE PAYMENT_MODE = 'CC'

SELECT * FROM SALES_STORE



---- DATA ANALYSIS--


-- TOP 5 MOST SELLING PRODUCTS BY QUANTITY
-- AND WHICH PRODUCTS ARE MOST IN DEMAND

SELECT * FROM SALES_STORE

SELECT DISTINCT STATUS FROM SALES_STORE

SELECT TOP 5 PRODUCT_NAME, SUM(QUANTITY)  AS TOTAL_QUANTITY_SOLD FROM SALES_STORE
WHERE STATUS = 'DELIVERED'
GROUP  BY product_name
ORDER BY TOTAL_QUANTITY_SOLD DESC;

---- MOST FREQUENTLY CANCELLED PRODUCTS
SELECT TOP 5 PRODUCT_NAME, COUNT(*) AS TOTAL_CANCELED FROM SALES_STORE
WHERE STATUS = 'CANCELLED'
GROUP BY PRODUCT_NAME
ORDER BY TOTAL_CANCELED DESC;

--- WHAT TIME OF THE DAY HAS THE HIGHEST NUMBER OF PURCHASES

SELECT * FROM SALES_STORE;


SELECT 
      CASE
          WHEN DATEPART(HOUR,TIME_OF_PURCHASE) BETWEEN 0 AND 5 THEN 'NIGHT'
          WHEN DATEPART(HOUR,TIME_OF_PURCHASE) BETWEEN 6 AND 11 THEN 'MORNING'
          WHEN DATEPART(HOUR,TIME_OF_PURCHASE) BETWEEN 12AND 17 THEN 'AFTERNOON'
          WHEN DATEPART(HOUR,TIME_OF_PURCHASE) BETWEEN 18 AND 23 THEN 'EVENING'
      END AS TIME_OF_DAY,
      COUNT(*) AS TOTAL_ORDERS
FROM SALES_STORE
GROUP BY 
CASE
WHEN DATEPART(HOUR,TIME_OF_PURCHASE) BETWEEN 0 AND 5 THEN 'NIGHT'
WHEN DATEPART(HOUR,TIME_OF_PURCHASE) BETWEEN 6 AND 11 THEN 'MORNING'
WHEN DATEPART(HOUR,TIME_OF_PURCHASE) BETWEEN 12AND 17 THEN 'AFTERNOON'
WHEN DATEPART(HOUR,TIME_OF_PURCHASE) BETWEEN 18 AND 23 THEN 'EVENING'
END
ORDER BY 
TOTAL_ORDERS DESC;


--- TOP 5 HIGHEST SPENDING CUSTOMERS
SELECT * FROM SALES_STORE;

SELECT PRICE * QUANTITY  AS TOTAL_SPEND FROM SALES_STORE



SELECT TOP 5 
       customer_name, 
       FORMAT(SUM(PRICE * QUANTITY), 'C', 'en-IN') AS TOTAL_SPEND
FROM SALES_STORE
GROUP BY customer_name
ORDER BY SUM(PRICE * QUANTITY) DESC;


---WHICH PRODUCT CATEGORIES GENERATE THE HIGHEST REVENUE

SELECT * FROM SALES_STORE

SELECT PRODUCT_CATEGORY, FORMAT(SUM(PRICE * QUANTITY), 'C', 'en-IN') AS REVENUE
FROM SALES_STORE
GROUP BY product_category
ORDER BY SUM(PRICE * QUANTITY) DESC;


---RETURN / CANCELLATION RATE PER CATEGORY

SELECT* FROM SALES_STORE;
-- CANCELLATION
SELECT PRODUCT_CATEGORY, FORMAT(COUNT(
CASE WHEN STATUS = 'CANCELLED' THEN 1 END)*100.0/COUNT(*),'N3') + ' %' AS CANCELLED_PERCENT
FROM SALES_STORE
GROUP BY product_category
ORDER BY CANCELLED_PERCENT DESC;

--- RETURN
SELECT PRODUCT_CATEGORY, FORMAT(COUNT(
CASE WHEN STATUS = 'RETURNED' THEN 1 END)*100.0/COUNT(*),'N3') + ' %' AS RETURNED_PERCENT
FROM SALES_STORE
GROUP BY product_category
ORDER BY RETURNED_PERCENT DESC;


--- MOST PREFERRED PAYMENT MODE

SELECT * FROM SALES_STORE;

SELECT PAYMENT_MODE, COUNT(PAYMENT_MODE) AS TOTAL_COUNT
FROM SALES_STORE
GROUP BY payment_mode
ORDER BY TOTAL_COUNT DESC;


---- AGE GROUP PURCHASING BEHAVIOR
SELECT * FROM SALES_STORE;

SELECT 
CASE
  WHEN CUSTOMER_AGE BETWEEN 18 AND 25 THEN '18-25'
  WHEN CUSTOMER_AGE BETWEEN 26 AND 35 THEN '26-35'
  WHEN CUSTOMER_AGE BETWEEN 36 AND 50 THEN '36-50'
  ELSE '51+'
END AS CUSTOMER_AGE,
  FORMAT(SUM(PRICE*QUANTITY),'C','EN-IN') AS TOTAL_PURCHASE
  FROM SALES_STORE
GROUP BY CASE
  WHEN CUSTOMER_AGE BETWEEN 18 AND 25 THEN '18-25'
  WHEN CUSTOMER_AGE BETWEEN 26 AND 35 THEN '26-35'
  WHEN CUSTOMER_AGE BETWEEN 36 AND 50 THEN '36-50'
  ELSE '51+'
END
ORDER BY TOTAL_PURCHASE DESC;


---- MONTHLY SALES TREND
SELECT * FROM SALES_STORE;

SELECT 
   FORMAT(PURCHASE_DATE, 'yyyy-MM') AS MONTH_YEAR,
   FORMAT(SUM(PRICE*QUANTITY),'C','EN-IN')AS TOTAL_SALES,
   SUM(QUANTITY) AS TOTAL_QUANTITY
FROM SALES_STORE
GROUP BY FORMAT(PURCHASE_DATE, 'yyyy-MM')


---2ND
SELECT * FROM SALES_STORE;


SELECT
   --YEAR(PURCHASE_DATE) AS YEARS,
   MONTH(PURCHASE_DATE) AS MONTHS,
   FORMAT(SUM(PRICE*QUANTITY), 'C','EN-IN') AS TOTAL_SALES,
   SUM(QUANTITY) AS TOTAL_QUANTITY
FROM SALES_STORE
GROUP BY YEAR(PURCHASE_DATE), MONTH(PURCHASE_DATE)
ORDER BY MONTHS;


--- CERTAINS GENDERS BUYING MORE SPECIFIC PRODUCT CATEGORIES
SELECT* FROM SALES_STORE;


SELECT GENDER, PRODUCT_CATEGORY, COUNT(PRODUCT_CATEGORY) AS TOTAL_PURCHASE
FROM SALES_STORE
GROUP BY GENDER, PRODUCT_CATEGORY
ORDER BY GENDER;


--2ND

SELECT* FROM
(SELECT GENDER, PRODUCT_CATEGORY FROM SALES_STORE)
AS SOURCE_TABLE
PIVOT(
COUNT(GENDER)
FOR GENDER IN ([MALE], [FEMALE]))
AS PIVOT_TABLE
ORDER BY PRODUCT_CATEGORY;























